{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\negiv\\\\Desktop\\\\React\\\\facerecognition\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\nimport Navigation from \"./navigation\";\nimport ImageLink from \"./imageLink\";\nimport Footer from \"./footer\";\nimport Clarifai from \"clarifai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  function imgLink(link) {\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"clarifai\",\n        \"app_id\": \"main\"\n      },\n      \"inputs\": [{\n        \"data\": {\n          \"image\": {\n            \"url\": {\n              link\n            }\n          }\n        }\n      }]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + {\n          YOUR_PERSONAL_TOKEN\n        }\n      },\n      body: raw\n    };\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageLink, {\n      fetchImg: imgLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navigation","ImageLink","Footer","Clarifai","App","imgLink","link","raw","JSON","stringify","requestOptions","method","headers","YOUR_PERSONAL_TOKEN","body","fetch","then","response","text","result","console","log","catch","error"],"sources":["C:/Users/negiv/Desktop/React/facerecognition/src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport Navigation from \"./navigation\";\nimport ImageLink from \"./imageLink\";\nimport Footer from \"./footer\";\nimport Clarifai from \"clarifai\";\n\nfunction App() {\n  function  imgLink(link) {\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"clarifai\",\n        \"app_id\": \"main\"\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": {link}\n                  }\n              }\n          }\n      ]\n    });\n    \n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + {YOUR_PERSONAL_TOKEN}\n        },\n        body: raw\n    };\n    \n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n    \n    fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n      \n  }\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <ImageLink fetchImg={imgLink}/>\n      <Footer />\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,UAAU;AAAC;AAEhC,SAASC,GAAG,GAAG;EACb,SAAUC,OAAO,CAACC,IAAI,EAAE;IAEtB,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;MACzB,aAAa,EAAE;QACb,SAAS,EAAE,UAAU;QACrB,QAAQ,EAAE;MACZ,CAAC;MACD,QAAQ,EAAE,CACN;QACI,MAAM,EAAE;UACJ,OAAO,EAAE;YACL,KAAK,EAAE;cAACH;YAAI;UAChB;QACJ;MACJ,CAAC;IAEP,CAAC,CAAC;IAEF,MAAMI,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,eAAe,EAAE,MAAM,GAAG;UAACC;QAAmB;MAClD,CAAC;MACDC,IAAI,EAAEP;IACV,CAAC;;IAED;IACA;IACA;;IAEAQ,KAAK,CAAE,qGAAoG,EAAEL,cAAc,CAAC,CACvHM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;EAElD;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd,QAAC,SAAS;MAAC,QAAQ,EAAElB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/B,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEZ;AAAC,KA7CQD,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}